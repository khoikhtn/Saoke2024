version: "3.8"

volumes:
  grafana_data: {}
  loki_data: {}
  prometheus_data: {}
  alertmanager_data: {}
  pmm_server_data: {}
  pmm_client_data: {}
  mariadb1_data: {}
  mariadb2_data: {}
  mariadb3_data: {}
  proxysql_data: {}

services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    restart: always
    labels:
      log: "promtail"
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./conf/grafana/grafana_provisioning/:/etc/grafana/provisioning/
      - ./conf/grafana/dashboards/:/var/lib/grafana/dashboards
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      # - GF_AUTH_DISABLE_LOGIN_FORM=false
      # - GF_SECURITY_ADMIN_USER=admin
      # - GF_SECURITY_ADMIN_PASSWORD=admin
      # - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
    # env_file:
    #   - ./grafana/config.monitoring

  loki:
    image: grafana/loki
    container_name: loki
    hostname: loki
    restart: always
    labels:
      log: "promtail"
    ports:
      - 3100:3100
    volumes:
      - loki_data:/loki
      - ./conf/loki.yml:/etc/loki/loki.yml
    command: -config.file=/etc/loki/loki.yml

  promtail:
    image: grafana/promtail
    container_name: promtail
    hostname: promtail
    restart: always
    labels:
      log: "promtail"
    # depends_on:
    #   - loki
    volumes:
      - ./conf/promtail.yml:/etc/promtail/promtail.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/promtail.yml

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    restart: always
    labels:
      log: "promtail"
    ports:
      - 9090:9090
    volumes:
      - prometheus_data:/prometheus
      - ./conf/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./conf/rules.yml:/etc/prometheus/rules.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    hostname: node-exporter
    restart: always
    labels:
      log: "promtail"
    # depends_on:
    #   - prometheus
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    hostname: alertmanager
    restart: always
    labels:
      log: "promtail"
    # depends_on:
    #   - prometheus
    ports:
      - 9093:9093
    volumes:
      - alertmanager_data:/alertmanager
      - ./conf/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"

  pmm-server:
    image: percona/pmm-server
    container_name: pmm-server
    hostname: pmm-server
    restart: always
    labels:
      log: "promtail"
    ports:
      - 443:443
    volumes:
      - pmm_server_data:/srv

  pmm-client:
    image: percona/pmm-client
    container_name: pmm-client
    hostname: pmm-client
    restart: always
    labels:
      log: "promtail"
    # depends_on:
    #   - pmm-server
    volumes:
      - pmm_client_data:/srv
    environment:
      - PMM_AGENT_SERVER_ADDRESS=pmm-server:443
      - PMM_AGENT_SERVER_USERNAME=admin
      - PMM_AGENT_SERVER_PASSWORD=admin
      - PMM_AGENT_SERVER_INSECURE_TLS=1
      - PMM_AGENT_SETUP_FORCE=1
      - PMM_AGENT_SETUP=1
      - PMM_AGENT_CONFIG_FILE=config/pmm-agent.yaml

  redis:
    image: redis
    container_name: redis
    hostname: redis
    restart: always
    labels:
      log: "promtail"
    ports:
      - 6379:6379

  proxysql:
    # image: proxysql/proxysql
    image: severalnines/proxysql # Support galera
    container_name: proxysql
    hostname: proxysql
    restart: always
    labels:
      log: "promtail"
    depends_on:
      - mariadb1
      - mariadb2
      - mariadb3
    ports:
      - 6032:6032
      - 6033:6033
      - 6080:6080
    volumes:
      - proxysql_data:/var/lib/proxysql
      - ./conf/proxysql.cnf:/etc/proxysql.cnf

  mariadb1:
    image: mariadb
    container_name: mariadb1
    hostname: mariadb1
    restart: always
    # stop_grace_period: 3s
    labels:
      log: "promtail"
    # ports:
    #   - 3301:3306
    volumes:
      - mariadb1_data:/var/lib/mysql
      - ./conf/galera.cnf:/etc/mysql/conf.d/galera.cnf
      # - ./backup_sql:/backup_mount
      # - ./src/mariabackup:/bin/mariabackup_cron
      - ./tmp/saoke.csv:/saoke.csv
    environment:
      MARIADB_ROOT_PASSWORD: 1
      MARIADB_DATABASE: test
    command:
      - "--wsrep-new-cluster"

  mariadb2:
    image: mariadb
    container_name: mariadb2
    hostname: mariadb2
    restart: always
    labels:
      log: "promtail"
    depends_on:
      - mariadb1
    # ports:
    #   - 3302:3306
    volumes:
      - mariadb2_data:/var/lib/mysql
      - ./conf/galera.cnf:/etc/mysql/conf.d/galera.cnf
      # - ./backup_sql:/backup_mount
      # - ./src/mariabackup:/bin/mariabackup_cron
    environment:
      MARIADB_ROOT_PASSWORD: 1

  mariadb3:
    image: mariadb
    container_name: mariadb3
    hostname: mariadb3
    restart: always
    labels:
      log: "promtail"
    depends_on:
      - mariadb1
    # ports:
    #   - 3303:3306
    volumes:
      - mariadb3_data:/var/lib/mysql
      - ./conf/galera.cnf:/etc/mysql/conf.d/galera.cnf
      # - ./backup_sql:/backup_mount
      # - ./src/mariabackup:/bin/mariabackup_cron
    environment:
      MARIADB_ROOT_PASSWORD: 1
